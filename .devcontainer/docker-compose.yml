services:
  dev:
    build:
      context: .
      # This path is relative to above context.
      dockerfile: Dockerfile
    volumes:
      - ..:/workspace:cached
    command: sleep infinity
    networks:
      - monorepo-network

  postgres:
    image: postgres:16-alpine
    container_name: monorepo-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: monorepo_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../infrastructure/init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - monorepo-network

  immudb:
    image: codenotary/immudb:latest
    container_name: monorepo-immudb
    environment:
      IMMUDB_ADDRESS: 0.0.0.0
      IMMUDB_PORT: 3322
      IMMUDB_PGSQL_SERVER: "true"
      IMMUDB_PGSQL_SERVER_PORT: 5433
      IMMUDB_METRICS_SERVER: "true"
      IMMUDB_METRICS_SERVER_PORT: 9497
      IMMUDB_WEBCONSOLE: "true"
      IMMUDB_WEBCONSOLE_PORT: 8080
    ports:
      - "3322:3322" # ImmuDB gRPC port
      - "5433:5433" # PostgreSQL wire protocol port
      - "8080:8080" # Web console UI
      - "9497:9497" # Metrics port
    volumes:
      - immudb_data:/var/lib/immudb
    healthcheck:
      test: ["CMD", "immuadmin", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - monorepo-network

  redis:
    image: redis:7-alpine
    container_name: monorepo-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - monorepo-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: monorepo-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
      HTTP_USER: admin
      HTTP_PASSWORD: admin
    ports:
      - "8081:8081"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - monorepo-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: monorepo-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - monorepo-network

networks:
  monorepo-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  immudb_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
